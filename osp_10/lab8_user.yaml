heat_template_version: 2016-10-14

description: This template will create an external network, upload an image, create a tenant and a user with a role to it, create tenant network, router, boot instance and assign IPs.

parameters:
  project_name:
    type: string
    description: Project name that will be created it.
    default: tenant1
  user_role:
    type: string
    description: User role to be assigned.
    default: ResellerAdmin
  project_user:
    type: string
    description: User to be created inside the project.
    default: user1
  project_user_passwd:
    type: string
    description: Password for the project defined user
    default: redhat
  tenant_net_cidr:
    type: string
    description: CIDR for the tenant network
    default: 192.168.1.0/24
  tenant_net_gateway:
    type: string
    description: gateway for the tenant network
    default: 192.168.1.254
  tenant_net_name:
    type: string
    description: name for the tenant network
    default: net1
  tenant_net_pool_start:
    type: string
    description: network pool start. typically .11 of whatever /24 is defined
    default: 192.168.1.10
  tenant_net_pool_end:
    type: string
    description: network pool end. typically .200 of whatever /24 is defined
    default: 192.168.1.100
  tenant_key_name:
    type: string
    description: ssh key required for server creation
    default: 'stack'
  tenant_server1_name:
    type: string
    description: name of the instance
    default: 'vm1'
  provider_net_cidr:
    type: string
    description: CIDR for the provider(external) network
    default: 192.168.122.0/24
  provider_net_gateway:
    type: string
    description: GW for the external network
    default: 192.168.122.1
  provider_net_pool_start:
    type: string 
    description: start of the IP pool for the external network
    default: 192.168.122.151
  provider_net_pool_end:
    type: string
    description: end of the IP pool for the external network
    default: 192.168.122.200

resources:

  tenant_key:
    type: OS::Nova::KeyPair
    properties:
      name: { get_param: tenant_key_name }
      save_private_key: false

  server1:
    type: OS::Nova::Server
    properties:
      name: { get_param: tenant_server1_name }
      image: { get_resource: glance_image_upload }
      flavor: { get_resource: instance_flavor }
      key_name:  { get_resource: tenant_key }
      networks:
        - port: { get_resource: server1_port }

  server1_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: tenant_net }
      fixed_ips:
        - subnet_id: { get_resource: tenant_subnet }
      security_groups: [get_resource: security_group]

  server1_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_resource: provider_network }
      port_id: { get_resource: server1_port }
