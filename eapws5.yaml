heat_template_version: 2013-05-23

description: >
  HOT template to create a new neutron network plus a router to the public
  network, and for deploying five servers into the new network. The template also
  assigns floating IP addresses to each server so they are routable from the
  public network.

parameters:
  public_net_id:
    type: string
    description: Public network for floating IP addresses
  private_net_name:
    type: string
    default: demo-net
    description: Private network name
  dns_nameservers:
     type: string
     default: [10.19.143.247]
  key_name:
    type: string
    description: Server keypair name
    default: demokp
  image:
    type: string
    description: Server image name
    default: rhel-server7.1
  flavor:
    type: string
    description: Server flavor
    default: m1.small
    constraints:
      - allowed_values: [m1.small, m1.medium, m1.large]
        description: InstanceType must be m1.small, m1.medium or m1.large
  volume_size:
    type: number
    description: Volume size
    default: 2
    constraints:
      - range: { min: 1, max: 1024 }
        description: must be between 1 and 1024 Gb.

resources:

  network:
    #type: file:///home/stack/templates/lib/private_network.yaml
    #type: https://raw.githubusercontent.com/RHsyseng/OSP7-OSPd-RefArch/master/scripts/templates/lib/private_network.yaml?token=AGGrrFPC-XnGyo-LNpFEK8iom4IqGLh9ks5V4kvAwA%3D%3D
    type: https://github.com/RHsyseng/OSP7-OSPd-RefArch/blob/master/scripts/templates/lib/private_network.yaml
    properties:
      public_network: { get_param: public_net_id }

  security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      description: Server security group rules
      name: security-group
      rules:
        - remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
          port_range_min: 22
          port_range_max: 22
        - remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
          port_range_min: 80
          port_range_max: 80
        - remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
          port_range_min: 443 
          port_range_max: 443
        - remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
          port_range_min: 3306
          port_range_max: 3306
        - remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
          port_range_min: 8080
          port_range_max: 8080
        - remote_ip_prefix: 0.0.0.0/0
          protocol: icmp

  server1:
    type: OS::Nova::Server
    properties:
      name: product-db
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name: { get_param: key_name }
      networks:
        - port: { get_resource: server1_port }
      user_data: |
      user_data: |
        #!/bin/bash -v
        yum localinstall -y http://rhos-release.virt.bos.redhat.com/repos/rhos-release/rhos-release-latest.noarch.rpm
        rhos-release 6
        yum repolist
        mkdir /pub
        echo "10.19.143.248:/pub /pub nfs defaults 0 0" >> /etc/fstab
        mount -av

        # configure the  persistent database storage
        mkfs.ext4 -L MYSQL /dev/vdb
        mount -L MYSQL /mnt
        chown 27.27 /mnt
        chcon system_u:object_r:mysqld_db_t:s0 /mnt
        umount /mnt
        sleep 1
        mkdir /var/lib/mysql
        sleep 2
        mount -L MYSQL /var/lib/mysql
        
        # configure the database
        yum install -y mariadb-server
        systemctl enable mariadb.service
        systemctl start mariadb.service
        mysql -u root < /pub/projects/rhos/kilo/scripts/jliberma/new/jboss/setup.sql
        mysql -u root -e "SHOW TABLES;" product
        mysql -u root -e "SHOW TABLES;" sales

      user_data_format: RAW
            
  cinder_volume:
    type: OS::Cinder::Volume
    properties:
      size: { get_param: volume_size }
  volume_attachment:
    type: OS::Cinder::VolumeAttachment
    properties:
      volume_id: { get_resource: cinder_volume }
      instance_uuid: { get_resource: server1 }
      mountpoint: /dev/vdb

  server1_port:
    type: OS::Neutron::Port
    properties:
      security_groups: [{ get_resource: security_group }]
      network_id: { get_resource: private_net }
      fixed_ips:
        - subnet_id: { get_resource: private_subnet }

  server1_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: { get_param: public_net_id }
      port_id: { get_resource: server1_port }

  server2:
    type: OS::Nova::Server
    properties:
      name: presentation
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name: { get_param: key_name }
      networks:
        - port: { get_resource: server2_port }
      user_data: |
        #!/bin/bash -v
        yum localinstall -y http://rhos-release.virt.bos.redhat.com/repos/rhos-release/rhos-release-latest.noarch.rpm
        rhos-release 6
        yum repolist
        yum install -y unzip
        mkdir /pub
        echo "10.19.143.248:/pub /pub nfs defaults 0 0" >> /etc/fstab
        mount -av
        cp /pub/projects/rhos/kilo/scripts/jliberma/new/jboss/jboss-eap-6.4.0.zip /tmp
        unzip /tmp/jboss-eap-6.4.0.zip
        mv jboss-eap-6.4/ /opt
      user_data_format: RAW

  server2_port:
    type: OS::Neutron::Port
    properties:
      security_groups: [{ get_resource: security_group }]
      network_id: { get_resource: private_net }
      fixed_ips:
        - subnet_id: { get_resource: private_subnet }

  server2_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: { get_param: public_net_id }
      port_id: { get_resource: server2_port }

  server3:
    type: OS::Nova::Server
    properties:
      name: product
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name: { get_param: key_name }
      networks:
        - port: { get_resource: server3_port }
      user_data: |
        #!/bin/bash -v
        yum localinstall -y http://rhos-release.virt.bos.redhat.com/repos/rhos-release/rhos-release-latest.noarch.rpm
        rhos-release 6
        yum repolist
        yum install -y unzip
        mkdir /pub
        echo "10.19.143.248:/pub /pub nfs defaults 0 0" >> /etc/fstab
        mount -av
        cp /pub/projects/rhos/kilo/scripts/jliberma/new/jboss/jboss-eap-6.4.0.zip /tmp
        unzip /tmp/jboss-eap-6.4.0.zip
        mv jboss-eap-6.4/ /opt
        yum install -y java-1.7.0-openjdk
        # database connector
        cp -f /pub/projects/rhos/kilo/scripts/jliberma/new/jboss/standalone.xml /opt/jboss-eap-6.4/standalone/configuration/standalone.xml
        mkdir -p /opt/jboss-eap-6.4/modules/system/layers/base/com/mysql/main
        cp /pub/projects/rhos/kilo/scripts/jliberma/new/jboss/{mysql-connector-java-5.1.34.jar,module.xml} /opt/jboss-eap-6.4/modules/system/layers/base/com/mysql/main
        ln -s /opt/jboss-eap-6.4/modules/system/layers/base/com/mysql/main/mysql-connector-java-5.1.34.jar /opt/jboss-eap-6.4/modules/system/layers/base/com/mysql/main/mysql-connector-java-5.1.34-bin.jar
      user_data_format: RAW

  server3_port:
    type: OS::Neutron::Port
    properties:
      security_groups: [{ get_resource: security_group }]
      network_id: { get_resource: private_net }
      fixed_ips:
        - subnet_id: { get_resource: private_subnet }

  server3_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: { get_param: public_net_id }
      port_id: { get_resource: server3_port }

  server4:
    type: OS::Nova::Server
    properties:
      name: billing
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name: { get_param: key_name }
      networks:
        - port: { get_resource: server4_port }
      user_data: |
        #!/bin/bash -v
        yum localinstall -y http://rhos-release.virt.bos.redhat.com/repos/rhos-release/rhos-release-latest.noarch.rpm
        rhos-release 6
        yum repolist
        yum install -y unzip
        mkdir /pub
        echo "10.19.143.248:/pub /pub nfs defaults 0 0" >> /etc/fstab
        mount -av
        cp /pub/projects/rhos/kilo/scripts/jliberma/new/jboss/jboss-eap-6.4.0.zip /tmp
        unzip /tmp/jboss-eap-6.4.0.zip
        mv jboss-eap-6.4/ /opt
        yum install -y java-1.7.0-openjdk
      user_data_format: RAW

  server4_port:
    type: OS::Neutron::Port
    properties:
      security_groups: [{ get_resource: security_group }]
      network_id: { get_resource: private_net }
      fixed_ips:
        - subnet_id: { get_resource: private_subnet }

  server4_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: { get_param: public_net_id }
      port_id: { get_resource: server4_port }

  server5:
    type: OS::Nova::Server
    properties:
      name: sales
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name: { get_param: key_name }
      networks:
        - port: { get_resource: server5_port }
      user_data: |
        #!/bin/bash -v
        yum localinstall -y http://rhos-release.virt.bos.redhat.com/repos/rhos-release/rhos-release-latest.noarch.rpm
        rhos-release 6
        yum repolist
        yum install -y unzip
        mkdir /pub
        echo "10.19.143.248:/pub /pub nfs defaults 0 0" >> /etc/fstab
        mount -av
        cp /pub/projects/rhos/kilo/scripts/jliberma/new/jboss/jboss-eap-6.4.0.zip /tmp
        unzip /tmp/jboss-eap-6.4.0.zip
        mv jboss-eap-6.4/ /opt
        yum install -y java-1.7.0-openjdk
        # database connector
        cp -f /pub/projects/rhos/kilo/scripts/jliberma/new/jboss/standalone.xml /opt/jboss-eap-6.4/standalone/configuration/standalone.xml
        mkdir -p /opt/jboss-eap-6.4/modules/system/layers/base/com/mysql/main
        cp /pub/projects/rhos/kilo/scripts/jliberma/new/jboss/{mysql-connector-java-5.1.34.jar,module.xml} /opt/jboss-eap-6.4/modules/system/layers/base/com/mysql/main
        ln -s /opt/jboss-eap-6.4/modules/system/layers/base/com/mysql/main/mysql-connector-java-5.1.34.jar /opt/jboss-eap-6.4/modules/system/layers/base/com/mysql/main/mysql-connector-java-5.1.34-bin.jar
      user_data_format: RAW

  server5_port:
    type: OS::Neutron::Port
    properties:
      security_groups: [{ get_resource: security_group }]
      network_id: { get_resource: private_net }
      fixed_ips:
        - subnet_id: { get_resource: private_subnet }

  server5_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: { get_param: public_net_id }
      port_id: { get_resource: server5_port }

outputs:
  server1_private_ip:
    description: IP address of server1 in private network
    value: { get_attr: [ server1, first_address ] }
  server1_public_ip:
    description: Floating IP address of server1 in public network
    value: { get_attr: [ server1_floating_ip, floating_ip_address ] }
  server2_private_ip:
    description: IP address of server2 in private network
    value: { get_attr: [ server2, first_address ] }
  server2_public_ip:
    description: Floating IP address of server2 in public network
    value: { get_attr: [ server2_floating_ip, floating_ip_address ] }
  server3_private_ip:
    description: IP address of server3 in private network
    value: { get_attr: [ server3, first_address ] }
  server3_public_ip:
    description: Floating IP address of server3 in public network
    value: { get_attr: [ server3_floating_ip, floating_ip_address ] }
  server4_private_ip:
    description: IP address of server4 in private network
    value: { get_attr: [ server4, first_address ] }
  server4_public_ip:
    description: Floating IP address of server4 in public network
    value: { get_attr: [ server4_floating_ip, floating_ip_address ] }
  server5_private_ip:
    description: IP address of server5 in private network
    value: { get_attr: [ server5, first_address ] }
  server5_public_ip:
    description: Floating IP address of server5 in public network
    value: { get_attr: [ server5_floating_ip, floating_ip_address ] }
